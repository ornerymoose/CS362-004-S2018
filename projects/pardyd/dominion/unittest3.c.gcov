        -:    0:Source:unittest3.c
        -:    0:Graph:unittest3.gcno
        -:    0:Data:unittest3.gcda
        -:    0:Runs:11
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <stdio.h>
        -:    4:#include <assert.h>
        -:    5:
        -:    6:/*
        -:    7:	UNIT TEST: isGameOver()
        -:    8:*/
        -:    9:
function main called 25786581001 returned 0% blocks executed 88%
        -:   10:int main(){
12067907750051446797:   11:    printf("UNIT TEST: isGameOver() function\n");
        -:   12:    struct gameState state;
12067907750051446797:   13:    int players = 2;
12067907750051446797:   14:    int seed = 100;
12067907750051446797:   15:	int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy};
        -:   16:	
12067907750051446797:   17:    initializeGame(players, k, seed, &state);
12067907750051446797:   18:    state.supplyCount[province] = 0; 
12067907750051446797:   19:    printf("\nNO PROVINCES LEFT:\n");
12067907750051446797:   20:    if (isGameOver(&state)){
branch  0 taken 1%
branch  1 taken 1%
111555105813627:   21:		printf("PASSING\n");
111555105813627:   22:	} else {
    #####:   23:		printf("FAILED\n");
        -:   24:	}
        9:   25:    state.supplyCount[province] = 1;
        -:   26: 
      614:   27:    for(int card = curse; card <= treasure_map; card++) {
branch  0 taken 96%
branch  1 taken 4%
      297:   28:    	if (card < 3) {
branch  0 taken 11%
branch  1 taken 89%
       33:   29:    		state.supplyCount[card] = 0;
       33:   30:    	} else {
      264:   31:    		state.supplyCount[card] = 5;
        -:   32:    	}
      297:   33:    }
        -:   34:    
       11:   35:    printf("\nFIRST THREE EMPTY PILES:\n");
       11:   36:    if (isGameOver(&state)){
branch  0 taken 100%
branch  1 taken 0%
       11:   37:		printf("PASSING\n");
       11:   38:	} else {
    #####:   39:		printf("FAILED\n");
        -:   40:	}
        -:   41:	
      616:   42:    for(int card = curse; card <= treasure_map; card++) {
branch  0 taken 96%
branch  1 taken 4%
      297:   43:        if (card > treasure_map - 3) {
branch  0 taken 11%
branch  1 taken 89%
       33:   44:        	state.supplyCount[card] = 0;
       33:   45:        } else {
      264:   46:        	state.supplyCount[card] = 5;
        -:   47:        }   
      297:   48:    }
        -:   49:
       11:   50:    printf("\nLAST 3 EMPTY PILES:\n");
       11:   51:    if (isGameOver(&state)){
branch  0 taken 0%
branch  1 taken 100%
    #####:   52:		printf("PASSING\n");
    #####:   53:	} else {
       11:   54:		printf("FAILED\n");
        -:   55:	}
       11:   56:    return 0;
        -:   57:}
        -:   58:
