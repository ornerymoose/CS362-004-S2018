        -:    0:Source:cardtest4.c
        -:    0:Graph:cardtest4.gcno
        -:    0:Data:cardtest4.gcda
        -:    0:Runs:12
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <string.h>
        -:    5:#include <stdio.h>
        -:    6:#include <stdlib.h>
        -:    7:#include <assert.h>
        -:    8:
        -:    9:/*
        -:   10:  Card Test 4: Council Room
        -:   11:*/
        -:   12:
function main called 12 returned 100% blocks executed 100%
        -:   13:int main(){
       12:   14:	int seed = 1000;
       12:   15:	int numPlayers = 2;
        -:   16:	struct gameState gs, testgs;
       12:   17:	int k[10] = {copper, minion, mine, silver, gold, cutpurse, sea_hag, tribute, smithy, council_room};
       12:   18:	printf("BEGIN Card Test 4, cardtest4.c: Council Room\n");
       12:   19:	initializeGame(numPlayers, k, seed, &gs);
       12:   20:	memcpy(&testgs, &gs, sizeof(struct gameState));
       12:   21:	myCouncilRoomFunction(&testgs, 0, 1);
       12:   22:	printf("EXPECTED: %d, GOT: %d\n", gs.handCount[gs.whoseTurn] + 1, testgs.handCount[testgs.whoseTurn]);
       12:   23:	memcpy(&testgs, &gs, sizeof(struct gameState));
       12:   24:	myCouncilRoomFunction(&testgs, 0, 2);
       12:   25:	printf("EXPECTED: %d, GOT: %d\n", gs.numActions + 2, testgs.numActions);
       12:   26:	printf("BEGIN Card Test 4, cardtest4.c: Council Room\n");
       12:   27:	return 0;
        -:   28:}
